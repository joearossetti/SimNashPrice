% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimulateStructErrors.R
\name{sim_struct_errors}
\alias{sim_struct_errors}
\title{Title Simulate Markets with different Structural Errors}
\usage{
sim_struct_errors(logit_market, struct_error_draw_fun, draws, tol, ...)
}
\arguments{
\item{logit_market}{'Logit_Demand_Market' object}

\item{struct_error_draw_fun}{function that returns a list of market objects length draws evaluated at each draw from the errors}

\item{draws}{numer of draws to take (passed to struct_error_draw_fun)}

\item{tol}{tolerance for the fixed point}

\item{...}{additional arguments to struct_error_draw_fun}
}
\value{
list of 'Logit_Demand_Market' object with the NE corresponding to the draws from the structural errors
}
\description{
This function takes a 'Logit_Demand_Market' object
 and a function that generates draws from th structural errors of the model (either estimates from GMM or parametric assumption)
 Calculates nash prices and returns a list of 'Logit_Demand_Market's based on each draw from the errors
}
\examples{
set.seed(1234)

## Parameters of demand function
alpha <- 4
beta <- c(2, 3.5)
gamma <- c(0.5, 0.3)

## Make a list of factor level
char_levels <- list(char1 = c(0,1), char2 = c(0,1))

## Make list of all potential products
XP <- expand.grid(char_levels)
J <- dim(XP)[1]

XP <- data.frame(XP, prodname=1:J)

a1 <- sample(c(0,1), 4, replace = TRUE)
a2 <- sample(c(0,1), 4, replace = TRUE)

Xi <- rnorm(1, 0, 1)
Omega <- rnorm(1, 0, 1)

my_prod_table <- data.frame(j = XP$prodname, delta = (cbind(XP$char1, XP$char2) \%*\% beta), mc = (cbind(XP$char1, XP$char2) \%*\% gamma))

my_mkt_prods <- rbind(my_prod_table[which(a1==1),], my_prod_table[which(a2==1),])
my_mkt_prods <- data.frame(my_mkt_prods, firm = c(1,1,1,0,0))

my_ldm_obj <- logit_demand_market(my_mkt_prods$firm, my_mkt_prods$delta, Mc = my_mkt_prods$mc, Struct_error = Xi, Deriv_price = alpha)

my_struct_error_fun <- function(draws, ...){
rnorm(n=draws, ...)
}

my_markets <- sim_struct_errors(my_ldm_obj, my_struct_error_fun, draws=500, 1e-6, mean=0, sd=1)
}

